// Code generated by MockGen. DO NOT EDIT.
// Source: demo.go

// Package mock_demo is a generated GoMock package.
package mock_demo

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCloudConfigs is a mock of CloudConfigs interface
type MockCloudConfigs struct {
	ctrl     *gomock.Controller
	recorder *MockCloudConfigsMockRecorder
}

// MockCloudConfigsMockRecorder is the mock recorder for MockCloudConfigs
type MockCloudConfigsMockRecorder struct {
	mock *MockCloudConfigs
}

// NewMockCloudConfigs creates a new mock instance
func NewMockCloudConfigs(ctrl *gomock.Controller) *MockCloudConfigs {
	mock := &MockCloudConfigs{ctrl: ctrl}
	mock.recorder = &MockCloudConfigsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCloudConfigs) EXPECT() *MockCloudConfigsMockRecorder {
	return m.recorder
}

// GetAll mocks base method
func (m *MockCloudConfigs) GetAll() (map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll
func (mr *MockCloudConfigsMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockCloudConfigs)(nil).GetAll))
}

// GetByKey mocks base method
func (m *MockCloudConfigs) GetByKey(key string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByKey", key)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetByKey indicates an expected call of GetByKey
func (mr *MockCloudConfigsMockRecorder) GetByKey(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByKey", reflect.TypeOf((*MockCloudConfigs)(nil).GetByKey), key)
}
